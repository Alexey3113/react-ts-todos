{"version":3,"sources":["components/Navbar.tsx","pages/AboutPage.tsx","pages/JavascriptPage.tsx","components/TodoForm.tsx","components/TodoList.tsx","pages/TodosPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","className","to","id","AboutPage","history","useHistory","onClick","push","JavascriptPage","TodoForm","onAdd","input","useRef","ref","type","placeholder","onKeyPress","event","key","current","value","htmlFor","TodoList","todos","onChangeCompleted","onRemove","length","map","todo","classes","completed","join","checked","onChange","bind","title","preventDefault","onDeleteTask","TodosPage","useState","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTask","Date","now","prev","window","confirm","filter","App","component","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.392b61e1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const Navbar: React.FC = () => {\r\n    return (\r\n        <nav>\r\n        <div className=\"nav-wrapper\">\r\n          <NavLink to=\"/\" className=\"brand-logo pdl10\">My-TODO</NavLink>\r\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n            <li><NavLink to=\"/\">Задачки</NavLink></li>\r\n            <li><NavLink to=\"/about\">О нас</NavLink></li>\r\n            <li><NavLink to=\"/javascript\">JavaScript</NavLink></li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router'\r\n\r\nexport const AboutPage: React.FC = () => {\r\n    const history = useHistory()\r\n    return (\r\n        <div>\r\n            <h2>About us</h2>\r\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugit adipisci illo, pariatur incidunt aperiam voluptatum unde laborum itaque reiciendis ab!</p>\r\n            <button className=\"btn\" onClick={() => history.push(\"/\")}>К задачам</button>\r\n            <button className=\"btn mgl20\" onClick={() => history.push(\"/javascript\")}>JavaScript</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router'\r\n\r\nexport const JavascriptPage: React.FC = () => {\r\n    const history = useHistory()\r\n    return (\r\n        <div>\r\n            <h2>JavaScript</h2>\r\n            <p>JavaScript - это мультипарадигменный язык программирования. Поддерживает объектно-ориентированный, императивный и функциональный стили. Является реализацией спецификации ECMAScript.</p>\r\n            <button className=\"btn\" onClick={() => history.push(\"/\")}>К задачам</button>\r\n            <button className=\"btn mgl20\" onClick={() => history.push(\"/about\")}>О нас</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef } from 'react'\r\n\r\ninterface TodoFromProps {\r\n    onAdd: (title: string) => void\r\n}\r\n\r\nexport const TodoForm: React.FC<TodoFromProps> = ({onAdd}) => {\r\n    // const [state, setState] = useState<string>('')\r\n    const input = useRef<HTMLInputElement>(null)\r\n\r\n    // const onChangeInputTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    //     setState(event.target.value)\r\n    //     console.log(state)\r\n    // }\r\n    const keyPressHandler = (event: React.KeyboardEvent) => {\r\n        if(event.key === \"Enter\"){\r\n            onAdd(input.current!.value)\r\n            input.current!.value = '' \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-field mt2 px1\">\r\n            <input ref={input} type=\"text\" id=\"title\" placeholder=\"Введите название дела\" onKeyPress={keyPressHandler} />\r\n            <label htmlFor=\"title\" className=\"active\">\r\n                Введите название дела\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { ITodo } from \"../interfaces\";\r\n\r\ntype TodoListProps = {\r\n  todos: ITodo[]\r\n  onChangeCompleted: (id: number) => void\r\n  onRemove: (id: number) => void\r\n};\r\n\r\nexport const TodoList: React.FC<TodoListProps> = ({ todos, onChangeCompleted, onRemove }) => {\r\n    const onDeleteTask = (event: React.MouseEvent, id: number) => {\r\n        event.preventDefault()\r\n        onRemove(id)\r\n    } \r\n    const history = useHistory()\r\n    if(todos.length === 0){\r\n        return <p className=\"center \">Пока дел нет</p>\r\n    }\r\n  return (\r\n    <ul>\r\n      {todos.map((todo) => {\r\n          const classes = [\"todo\"]\r\n          if(todo.completed){\r\n              classes.push(\"completed\")\r\n          }\r\n          \r\n       return (<li className={classes.join(\" \")} key={todo.id}>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={todo.completed}\r\n              onChange={onChangeCompleted.bind(null, todo.id)}\r\n            />\r\n            <span>{todo.title}</span>\r\n            <i\r\n              className=\"material-icons red-text\"\r\n              onClick={event => onDeleteTask(event, todo.id)}\r\n            >\r\n              delete\r\n            </i>\r\n          </label>\r\n        </li>)\r\n      })}\r\n      <div className=\"buttons\">\r\n          <button className=\"btn\" onClick={() => history.push(\"/javascript\")}>JavaScript</button>\r\n          <button className=\"btn mgl20\" onClick={() => history.push(\"/about\")}>О нас</button>\r\n      </div>\r\n    </ul>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport { TodoForm } from '../components/TodoForm'\r\nimport { TodoList } from '../components/TodoList'\r\nimport { ITodo } from '../interfaces'\r\n\r\nexport const TodosPage: React.FC = () => {\r\n    const [todos, setTodos] = useState<ITodo[]>([])\r\n\r\n    useEffect(() => {\r\n        const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[]\r\n        setTodos(saved)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos))\r\n    }, [todos])\r\n    \r\n    const addHandler = (title: string) => {\r\n        const newTask = {id: Date.now(), completed: false, title}\r\n        setTodos(prev => [newTask, ...todos])\r\n    }\r\n\r\n    const toggleHandler = (id: number) => {\r\n        setTodos(todos.map(todo => {\r\n            if (todo.id === id) {\r\n              todo.completed = !todo.completed\r\n            }\r\n            return todo\r\n          })\r\n        )\r\n      }\r\n    const removeHandler = (id: number) => {\r\n        const isDelete = window.confirm(\"Вы точно хотите удалить ваше дело?\")\r\n        if(isDelete){setTodos(todos.filter(todo => todo.id !== id))}\r\n    }\r\n    // const onChangeCompleted = (id: number) => {\r\n    //     debugger;\r\n    //     setTodos(prev => prev.map(todo => {\r\n            \r\n    //         if(todo.id === id){\r\n    //             todo.completed = !todo.completed\r\n    //         }\r\n    //         return todo\r\n    //     }))\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <TodoForm onAdd={addHandler} />\r\n\r\n            <TodoList todos={todos} onChangeCompleted={toggleHandler} onRemove={removeHandler} />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\nimport { BrowserRouter, HashRouter, Route, Switch } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { AboutPage } from \"./pages/AboutPage\";\nimport { JavascriptPage } from \"./pages/JavascriptPage\";\nimport { TodosPage } from './pages/TodosPage';\n\nexport const App: React.FC = () => {\n  return (\n      <HashRouter>\n\n        <Navbar />\n        <div className=\"container\">\n          <Switch >\n              <Route component={TodosPage} path=\"/\" exact />\n              <Route component={AboutPage} path=\"/about\"  />\n              <Route component={JavascriptPage} path=\"/javascript\" />\n          </Switch>\n        </div>\n        \n      </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}